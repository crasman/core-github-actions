name: 'Update K8s Deployment YAML'
description: 'Updates image tag in K8s deployment YAML for specified applications and commits changes.'

inputs:
  image:
    description: 'The full image identifier (e.g., host/project/repo/image-name) to find and update in the target files.'
    type: string
    required: true
  tag:
    description: 'The new tag or version to apply to the image (e.g., v1.2.3 or v456).'
    type: string
    required: true
  environment:
    description: 'Target environment (e.g., production, staging). This value is used as a directory name in the path to the target files.'
    type: string
    required: true
  applications:
    description: 'A space-separated list of application names. Each name is used as a directory name in the path to its respective target file.'
    type: string
    required: true
  manifest_basepath:
    description: 'The base directory path for the target files.'
    type: string
    required: false
    default: 'deploy/argocd'
  manifest_filename:
    description: 'The name of the target file to update within each application-specific path (e.g., deployment.yaml).'
    type: string
    required: false
    default: 'deployment.yaml'
  branch:
    description: 'The branch to checkout and push changes to.'
    type: string
    required: true
    default: 'master'

runs:
  using: "composite"
  steps:
    # Step 1:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}

    # Step 2:
    - name: Update Image Tags in deployment YAMLs
      shell: bash
      run: |
        set -e
        for app_name in ${{ inputs.applications }}; do

          echo "Processing application: $app_name for environment: ${{ inputs.environment }}"
          ACTUAL_FILE_PATH="${{ inputs.manifest_basepath }}/${app_name}/${{ inputs.environment }}/${{ inputs.manifest_filename }}"

          if [ ! -f "$ACTUAL_FILE_PATH" ]; then
            echo "Error: Deployment file '$ACTUAL_FILE_PATH' for application '$app_name' in environment '${{ inputs.environment }}' not found."
            exit 1
          fi

          if grep -q "${{ inputs.image }}.*" "$ACTUAL_FILE_PATH"; then

            sed -i "s|\(${{ inputs.image }}\).*|\1:${{ inputs.tag }}|" "$ACTUAL_FILE_PATH"

            if ! grep -q "${{ inputs.image }}:${{ inputs.tag }}" "$ACTUAL_FILE_PATH"; then
              echo "Error: sed command did not update the image tag as expected in $ACTUAL_FILE_PATH for application $app_name."
              echo "Searched for line: image: ${{ inputs.image }}:${{ inputs.tag }}"
              echo "--- File content after sed attempt for $ACTUAL_FILE_PATH ---"
              cat "$ACTUAL_FILE_PATH"
              echo "------------------------------------"
              exit 1
            fi

            echo "Successfully updated image tag in $ACTUAL_FILE_PATH for application $app_name"
            git add "$ACTUAL_FILE_PATH"
          else
            echo "Warning: Image line for '${{ inputs.image }}' not found in '$ACTUAL_FILE_PATH'. Skipping update for this application's image."
          fi
        done

    # Step 3:
    - name: Commit and Push Changes
      shell: bash
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        if git diff --staged --quiet; then
          echo "No changes to commit for applications '${{ inputs.applications }}' in environment '${{ inputs.environment }}'."
        else
          git commit -m "ci: Update ${{ inputs.applications }} in ${{ inputs.environment }} to tag ${{ inputs.tag }} [skip ci]"
          git push origin ${{ inputs.branch }}
          echo "Changes for applications '${{ inputs.applications }}' in environment '${{ inputs.environment }}' pushed to ${{ inputs.branch }}"
        fi
